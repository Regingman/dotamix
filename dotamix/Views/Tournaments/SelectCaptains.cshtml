@model dotamix.Models.Tournament

@{
    ViewData["Title"] = "Выбор капитанов";
}

<h1>Выбор капитанов для турнира "@Model.Name"</h1>

@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success">
        @TempData["SuccessMessage"]
    </div>
}

@if (TempData["ErrorMessage"] != null)
{
    <div class="alert alert-danger">
        @TempData["ErrorMessage"]
    </div>
}

<div class="row">
    <div class="col-md-6">
        <div class="card">
            <div class="card-header">
                <h5>Текущие капитаны</h5>
            </div>
            <div class="card-body">
                <div class="table-responsive">
                    <table class="table">
                        <thead>
                            <tr>
                                <th>Имя</th>
                                <th>Никнейм</th>
                                <th>MMR</th>
                                <th>Позиции</th>
                                <th>Действия</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var participant in Model.Participants.Where(p => p.IsCaptain))
                            {
                                <tr>
                                    <td>@participant.User.Name</td>
                                    <td>@participant.User.Nickname</td>
                                    <td>@participant.MMR</td>
                                    <td>
                                        @foreach (var position in participant.GetPositions())
                                        {
                                            <span class="badge bg-primary me-1">@position</span>
                                        }
                                    </td>
                                    <td>
                                        <form asp-action="RemoveCaptain" method="post" style="display: inline;">
                                            <input type="hidden" name="tournamentId" value="@Model.Id" />
                                            <input type="hidden" name="participantId" value="@participant.Id" />
                                            <button type="submit" class="btn btn-danger btn-sm" onclick="return confirm('Вы уверены, что хотите снять статус капитана?')">
                                                Снять капитана
                                            </button>
                                        </form>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>

    <div class="col-md-6">
        <div class="card">
            <div class="card-header">
                <h5>Потенциальные капитаны</h5>
            </div>
            <div class="card-body">
                <!-- Фильтр для игроков -->
                <div class="mb-3">
                    <div class="row g-3">
                        <div class="col-md-6">
                            <input type="text" id="playerSearch" class="form-control" placeholder="Поиск по имени или никнейму">
                        </div>
                        <div class="col-md-3">
                            <select id="mmrFilter" class="form-select">
                                <option value="">Все MMR</option>
                                <option value="high">Высокий (7000+)</option>
                                <option value="medium">Средний (5000-7000)</option>
                                <option value="low">Низкий (<5000)</option>
                            </select>
                        </div>
                        <div class="col-md-3">
                            <select id="positionFilter" class="form-select">
                                <option value="">Все позиции</option>
                                <option value="1">Керри</option>
                                <option value="2">Мид</option>
                                <option value="3">Оффлейн</option>
                                <option value="4">Поддержка</option>
                                <option value="5">Хард поддержка</option>
                            </select>
                        </div>
                    </div>
                </div>
                
                <div class="table-responsive">
                    <table class="table" id="potentialCaptainsTable">
                        <thead>
                            <tr>
                                <th>Имя</th>
                                <th>Никнейм</th>
                                <th>MMR</th>
                                <th>Позиции</th>
                                <th>Действия</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var participant in ViewBag.PotentialCaptains)
                            {
                                <tr class="player-row" 
                                    data-name="@participant.User?.Name" 
                                    data-nickname="@participant.User?.Nickname" 
                                    data-mmr="@participant.MMR"
                                    data-positions="@string.Join(",", participant.GetPositions())">
                                    <td>@participant.User?.Name</td>
                                    <td>@participant.User?.Nickname</td>
                                    <td>@participant.MMR</td>
                                    <td>
                                        @foreach (var position in participant.GetPositions())
                                        {
                                            <span class="badge bg-primary me-1">@position</span>
                                        }
                                    </td>
                                    <td>
                                        <form asp-action="AssignCaptain" method="post" style="display: inline;">
                                            <input type="hidden" name="tournamentId" value="@Model.Id" />
                                            <input type="hidden" name="participantId" value="@participant.Id" />
                                            <button type="submit" class="btn btn-success btn-sm">
                                                Назначить капитаном
                                            </button>
                                        </form>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="mt-3">
    <a asp-action="Details" asp-route-id="@Model.Id" class="btn btn-secondary">Назад к деталям турнира</a>
</div>

<style>
    .badge {
        font-size: 0.8rem;
        padding: 0.3em 0.6em;
    }
    
    .table th {
        white-space: nowrap;
    }
    
    .table td {
        vertical-align: middle;
    }
</style>

@section Scripts {
    <script>
        $(document).ready(function() {
            // Функция фильтрации игроков
            function filterPlayers() {
                const searchText = $('#playerSearch').val().toLowerCase();
                const mmrFilter = $('#mmrFilter').val();
                const positionFilter = $('#positionFilter').val();
                
                // Сначала показываем все строки
                $('.player-row').show();
                
                // Затем применяем фильтры
                $('.player-row').each(function() {
                    const name = $(this).data('name');
                    const nickname = $(this).data('nickname');
                    const mmr = parseInt($(this).data('mmr'));
                    const positions = $(this).data('positions');
                    
                    // Фильтр по поиску
                    if (searchText && !name.includes(searchText) && !nickname.includes(searchText)) {
                        $(this).hide();
                        return;
                    }
                    
                    // Фильтр по MMR
                    if (mmrFilter) {
                        if (mmrFilter === 'high' && mmr < 7000) {
                            $(this).hide();
                            return;
                        } else if (mmrFilter === 'medium' && (mmr < 5000 || mmr >= 7000)) {
                            $(this).hide();
                            return;
                        } else if (mmrFilter === 'low' && mmr >= 5000) {
                            $(this).hide();
                            return;
                        }
                    }
                    
                    // Фильтр по позиции
                    if (positionFilter) {
                        const positionMap = {
                            '1': 'Керри',
                            '2': 'Мид',
                            '3': 'Оффлейн',
                            '4': 'Поддержка',
                            '5': 'Хард поддержка'
                        };
                        const positionText = positionMap[positionFilter];
                        
                        if (!positions.includes(positionText)) {
                            $(this).hide();
                            return;
                        }
                    }
                });
            }
            
            // Функция сортировки по MMR
            function sortByMMR(ascending = true) {
                const rows = $('.player-row').toArray();
                const tbody = $('#potentialCaptainsTable tbody');
                
                rows.sort(function(a, b) {
                    const mmrA = parseInt($(a).data('mmr'));
                    const mmrB = parseInt($(b).data('mmr'));
                    
                    if (ascending) {
                        return mmrA - mmrB;
                    } else {
                        return mmrB - mmrA;
                    }
                });
                
                tbody.empty();
                rows.forEach(function(row) {
                    tbody.append(row);
                });
            }
            
            // Привязка обработчиков событий к элементам фильтра
            $('#playerSearch').on('input', filterPlayers);
            $('#mmrFilter').on('change', function() {
                const value = $(this).val();
                if (value === 'asc' || value === 'desc') {
                    sortByMMR(value === 'asc');
                } else {
                    filterPlayers();
                }
            });
            $('#positionFilter').on('change', filterPlayers);
            
            // Добавляем опции сортировки в выпадающий список MMR
            $('#mmrFilter').append('<option value="asc">По возрастанию MMR</option>');
            $('#mmrFilter').append('<option value="desc">По убыванию MMR</option>');
            
            // Инициализация: показываем все записи
            $('.player-row').show();
        });
    </script>
} 